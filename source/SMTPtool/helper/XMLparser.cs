using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using System.Diagnostics;
using System.Xml.Linq;
using System.IO;
using System.Reflection;
using SMTPtestTool;

namespace SMTPtool.helper
{
    public class XMLparser
    {
        Main _linkToMain;

        public XMLparser(Main _linkToMain)
        {
            this._linkToMain = _linkToMain;
        }

        public void loadMainXML()
        {
            try
            {
                var doc = XDocument.Load(Path.GetDirectoryName(Assembly.GetEntryAssembly().Location) + "\\config.xml");
                Debug.WriteLine("PATH:" + Path.GetDirectoryName(Assembly.GetEntryAssembly().Location) + "\\config.xml");

                doc.Element("configuration").Element("server");

                foreach (var singleEntry in doc.Element("configuration").Element("servers").Elements("entry"))
                {
                    _linkToMain.serverList.Add(singleEntry.Attribute("value").Value);
                    //Debug.WriteLine(singleEntry.Attribute("value").Value);
                }
                _linkToMain.cbxServer.DataSource = _linkToMain.serverList;
                _linkToMain.cbxRemailIP.DataSource = _linkToMain.serverList;
                _linkToMain.cbxSessionServer.DataSource = _linkToMain.serverList;

                foreach (var singleEntry in doc.Element("configuration").Element("fromAddresses").Elements("entry"))
                {
                    _linkToMain.mailFromList.Add(singleEntry.Attribute("value").Value);
                    // Debug.WriteLine(singleEntry.Attribute("value").Value);
                }
                _linkToMain.cbxFrom.DataSource = _linkToMain.mailFromList;
                _linkToMain.cbxRemailFrom.DataSource = _linkToMain.mailFromList;
                _linkToMain.cbxSessionFrom.DataSource = _linkToMain.mailFromList;

                foreach (var singleEntry in doc.Element("configuration").Element("toAddresses").Elements("entry"))
                {
                    _linkToMain.mailToList.Add(singleEntry.Attribute("value").Value);
                    // Debug.WriteLine(singleEntry.Attribute("value").Value);
                }
                _linkToMain.cbxTo.DataSource = _linkToMain.mailToList;
                _linkToMain.cbxRemailTo.DataSource = _linkToMain.mailToList;
                _linkToMain.cbxSessionTo.DataSource = _linkToMain.mailToList;
            }
            catch { }
        }


        public void writeXML()
        {
            try
            {
                XmlWriterSettings settings = new XmlWriterSettings();
                settings.Indent = true;
                settings.IndentChars = "\t";

                XmlWriter xmlWriter = XmlWriter.Create("config.xml", settings);
                xmlWriter.WriteStartDocument();
                xmlWriter.WriteComment("DO NOT EDIT THIS FILE");
                xmlWriter.WriteStartElement("configuration");

                xmlWriter.WriteStartElement("server");
                xmlWriter.WriteAttributeString("ip", _linkToMain.cbxServer.Text);
                xmlWriter.WriteAttributeString("port", _linkToMain.txtPort.Text);
                xmlWriter.WriteAttributeString("to", _linkToMain.cbxTo.Text);
                xmlWriter.WriteAttributeString("from", _linkToMain.cbxFrom.Text);
                xmlWriter.WriteEndElement();
                xmlWriter.WriteStartElement("servers");
                for (int i = 1; i <= _linkToMain.serverList.Count; i++)
                {
                    xmlWriter.WriteStartElement("entry");
                    xmlWriter.WriteAttributeString("value", _linkToMain.serverList[i - 1]);
                    xmlWriter.WriteEndElement();
                }                
                xmlWriter.WriteEndElement();

                xmlWriter.WriteStartElement("fromAddresses");
                for (int i = 1; i <= _linkToMain.mailFromList.Count; i++)
                {
                    xmlWriter.WriteStartElement("entry");
                    xmlWriter.WriteAttributeString("value", _linkToMain.mailFromList[i - 1]);
                    xmlWriter.WriteEndElement();
                }
                xmlWriter.WriteEndElement();

                xmlWriter.WriteStartElement("toAddresses");
                for (int i = 1; i <= _linkToMain.mailToList.Count; i++)
                {
                    xmlWriter.WriteStartElement("entry");
                    xmlWriter.WriteAttributeString("value", _linkToMain.mailToList[i - 1]);
                    xmlWriter.WriteEndElement();
                }
                xmlWriter.WriteEndElement();
               
                xmlWriter.WriteEndDocument();
                xmlWriter.Close();
                Debug.WriteLine("XML written");
            }
            catch
            {
                Debug.WriteLine("XML writing error");
            }
        }


    }
}
